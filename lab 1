#include <iostream>
#include <string>
#include <cstdlib>
using namespace std;

// 1.2
int sumLastNums(int x) {
    int a1 = x % 10;
    int a2 = (x / 10) % 10;
    return a1 + a2;
}

// 1.4
bool isPositive(int x) {
    return x > 0;
}

// 1.6
bool isUpperCase(char x) {
    return x >= 'A' && x <= 'Z';
}

// 1.8
bool isDivisor(int a, int b) {
    return (a != 0 && b % a == 0) || (b != 0 && a % b == 0);
}

// 1.10
int lastNumSum(int a, int b) {
    return (a % 10) + (b % 10);
}

// 2.2
double safeDiv(int x, int y) {
    return (y == 0) ? 0 : static_cast<double>(x) / y;
}

// 2.4
string makeDecision(int x, int y) {
    return (x > y) ? to_string(x) + " > " + to_string(y) : 
           (x < y) ? to_string(x) + " < " + to_string(y) : 
           to_string(x) + " == " + to_string(y);
}

// 2.6
bool sum3(int x, int y, int z) {
    return (x + y == z) || (x + z == y) || (y + z == x);
}

// 2.8
string age(int x) {
    int lastDigit = x % 10;
    int lastTwoDigits = x % 100;
    if (lastDigit == 1 && lastTwoDigits != 11)
        return to_string(x) + " год";
    else if ((lastDigit >= 2 && lastDigit <= 4) && (lastTwoDigits != 12 && lastTwoDigits != 13 && lastTwoDigits != 14))
        return to_string(x) + " года";
    else
        return to_string(x) + " лет";
}

// 3.2
string reverseListNums(int x) {
    string result = "";
    for (int i = x; i >= 0; i--) {
        result += to_string(i) + (i > 0 ? " " : "");
    }
    return result;
}

// 3.4
int pow(int x, int y) {
    int result = 1;
    for (int i = 0; i < y; i++) {
        result *= x;
    }
    return result;
}

// 3.6
bool equalNum(int x) {
    int lastDigit = x % 10;
    while (x > 0) {
        if (x % 10 != lastDigit)
            return false;
        x /= 10;
    }
    return true;
}

// 3.8
void leftTriangle(int x) {
    for (int i = 1; i <= x; i++) {
        for (int j = 1; j <= i; j++) {
            cout << "*";
        }
        cout << endl;
    }
}

// 3.10
void guessGame() {
    int secretNumber = rand() % 10;
    int guess;
    int attempts = 0;
    do {
        cout << "Введите число от 0 до 9: ";
        cin >> guess;
        if (guess < 0 || guess > 9) {
            cout << "Вы ввели неправильное число. Выход из игры." << endl;
            return;
        }
        attempts++;
        if (guess < secretNumber)
            cout << "Загаданное число больше." << endl;
        else if (guess > secretNumber)
            cout << "Загаданное число меньше." << endl;
    } while (guess != secretNumber);
    cout << "Вы угадали число за " << attempts << " попыток!" << endl;
}

// 4.2
int findLast(int arr[], int size, int x) {
    for (int i = size - 1; i >= 0; i--) {
        if (arr[i] == x)
            return i;
    }
    return -1;
}

// 4.4
int* add(int arr[], int size, int x, int pos) {
    if (pos < 0 || pos > size) {
        cout << "Ошибка: недопустимая позиция." << endl;
        return nullptr;
    }
    int* newArr = new int[size + 1];
    for (int i = 0; i < pos; i++) {
        newArr[i] = arr[i];
    }
    newArr[pos] = x;
    for (int i = pos; i < size; i++) {
        newArr[i + 1] = arr[i];
    }
    return newArr;
}

// 4.6
void reverse(int arr[], int size) {
    for (int i = 0; i < size / 2; i++) {
        int temp = arr[i];
        arr[i] = arr[size - i - 1];
        arr[size - i - 1] = temp;
    }
}

// 4.8
int* concat(int arr1[], int size1, int arr2[], int size2) {
    int* result = new int[size1 + size2];
    for (int i = 0; i < size1; i++) {
        result[i] = arr1[i];
    }
    for (int i = 0; i < size2; i++) {
        result[size1 + i] = arr2[i];
    }
    return result;
}

// 4.10
int* deleteNegative(int arr[], int size, int& newSize) {
    newSize = 0;
    for (int i = 0; i < size; i++) {
        if (arr[i] >= 0)
            newSize++;
    }
    int* result = new int[newSize];
    int index = 0;
    for (int i = 0; i < size; i++) {
        if (arr[i] >= 0)
            result[index++] = arr[i];
    }
    return result;
}

void executeTask(int taskNumber) {
    int* arr = nullptr;
    int size = 0;

    switch (taskNumber) {
        case 1: {
            int num;
            cout << "Введите число для задачи 1.2: ";
            cin >> num;
            cout << "Сумма последних двух цифр числа " << num << ": " << sumLastNums(num) << endl;
            break;
        }
        case 2: {
            int x;
            cout << "Введите число для задачи 1.4: ";
            cin >> x;
            cout << x << (isPositive(x) ? " положительное." : " отрицательное.") << endl;
            break;
        }
        case 3: {
            char ch;
            cout << "Введите символ для задачи 1.6: ";
            cin >> ch;
            cout << ch << (isUpperCase(ch) ? " является заглавной буквой." : " не является заглавной буквой.") << endl;
            break;
        }
        case 4: {
            int a, b;
            cout << "Введите два числа для задачи 1.8: ";
            cin >> a >> b;
            cout << a << " и " << b << (isDivisor(a, b) ? " являются делителями." : " не являются делителями.") << endl;
            break;
        }
        case 5: {
            int num1, num2;
            cout << "Введите два числа для задачи 1.10: ";
            cin >> num1 >> num2;
            cout << "Сумма последних цифр " << num1 << " и " << num2 << ": " << lastNumSum(num1, num2) << endl;
            break;
        }
        case 6: {
            int numerator, denominator;
            cout << "Введите числитель и знаменатель для задачи 2.2: ";
            cin >> numerator >> denominator;
            cout << "Результат безопасного деления: " << safeDiv(numerator, denominator) << endl;
            break;
        }
        case 7: {
            int p, q;
            cout << "Введите два числа для задачи 2.4: ";
            cin >> p >> q;
            cout << "Сравнение: " << makeDecision(p, q) << endl;
            break;
        }
        case 8: {
            int x1, x2, x3;
            cout << "Введите три числа для задачи 2.6: ";
            cin >> x1 >> x2 >> x3;
            cout << (sum3(x1, x2, x3) ? "Одно из чисел равно сумме двух других." : "Ни одно из чисел не равно сумме двух других.") << endl;
            break;
        }
        case 9: {
            int ageVal;
            cout << "Введите возраст для задачи 2.8: ";
            cin >> ageVal;
            cout << age(ageVal) << endl;
            break;
        }
        case 10: {
            int numCount;
            cout << "Введите число для задачи 3.2: ";
            cin >> numCount;
            if (numCount < 0) {
                cout << "Вы ввели неправильное число. Выход из задачи." << endl;
                return;
            }
            cout << "Обратный порядок чисел: " << reverseListNums(numCount) << endl;
            break;
        }
        case 11: {
            int base, exponent;
            cout << "Введите основание и показатель для задачи 3.4: ";
            cin >> base >> exponent;
            if (exponent < 0) {
                cout << "Показатель должен быть неотрицательным. Выход из задачи." << endl;
                return;
            }
            cout << base << " в степени " << exponent << " = " << pow(base, exponent) << endl;
            break;
        }
        case 12: {
            int equalNumVal;
            cout << "Введите число для задачи 3.6: ";
            cin >> equalNumVal;
            cout << (equalNum(equalNumVal) ? "Все цифры одинаковые." : "Цифры не одинаковые.") << endl;
            break;
        }
        case 13: {
            int triangleHeight;
            cout << "Введите высоту треугольника для задачи 3.8: ";
            cin >> triangleHeight;
            if (triangleHeight < 1) {
                cout << "Высота треугольника должна быть положительной. Выход из задачи." << endl;
                return;
            }
            leftTriangle(triangleHeight);
            break;
        }
        case 14: {
            cout << "Игра 'Угадай число' для задачи 3.10." << endl;
            guessGame();
            break;
        }
        case 15: {
            cout << "Введите размер массива для задачи 4.2: ";
            cin >> size;
            if (size <= 0) {
                cout << "Размер массива должен быть положительным. Выход из задачи." << endl;
                return;
            }
            arr = new int[size];
            cout << "Введите элементы массива: ";
            for (int i = 0; i < size; i++) {
                cin >> arr[i];
            }
            int searchValue;
            cout << "Введите значение для поиска: ";
            cin >> searchValue;
            int lastIndex = findLast(arr, size, searchValue);
            cout << "Последний индекс элемента " << searchValue << ": " << lastIndex << endl;
            delete[] arr;
            break;
        }
        case 16: {
            cout << "Введите размер массива для задачи 4.4: ";
            cin >> size;
            if (size <= 0) {
                cout << "Размер массива должен быть положительным. Выход из задачи." << endl;
                return;
            }
            arr = new int[size];
            cout << "Введите элементы массива: ";
            for (int i = 0; i < size; i++) {
                cin >> arr[i];
            }
            int valueToAdd, position;
            cout << "Введите значение для добавления и позицию: ";
            cin >> valueToAdd >> position;
            if (position < 0 || position > size) {
                cout << "Ошибка: недопустимая позиция." << endl;
                delete[] arr;
                return;
            }
            int* newArr = add(arr, size, valueToAdd, position);
            if (newArr) {
                cout << "Новый массив: ";
                for (int i = 0; i < size + 1; i++) {
                    cout << newArr[i] << " ";
                }
                cout << endl;
                delete[] newArr;
            }
            delete[] arr;
            break;
        }
        case 17: {
            cout << "Введите размер массива для задачи 4.6: ";
            cin >> size;
            if (size <= 0) {
                cout << "Размер массива должен быть положительным. Выход из задачи." << endl;
                return;
            }
            arr = new int[size];
            cout << "Введите элементы массива: ";
            for (int i = 0; i < size; i++) {
                cin >> arr[i];
            }
            reverse(arr, size);
            cout << "Развернутый массив: ";
            for (int i = 0; i < size; i++) {
                cout << arr[i] << " ";
            }
            cout << endl;
            delete[] arr;
            break;
        }
        case 18: {
            int size1, size2;
            cout << "Введите размер первого массива: ";
            cin >> size1;
            if (size1 <= 0) {
                cout << "Размер массива должен быть положительным. Выход из задачи." << endl;
                return;
            }
            int* arr1 = new int[size1];
            cout << "Введите элементы первого массива: ";
            for (int i = 0; i < size1; i++) {
                cin >> arr1[i];
            }
            cout << "Введите размер второго массива: ";
            cin >> size2;
            if (size2 <= 0) {
                cout << "Размер массива должен быть положительным. Выход из задачи." << endl;
                delete[] arr1;
                return;
            }
            int* arr2 = new int[size2];
            cout << "Введите элементы второго массива: ";
            for (int i = 0; i < size2; i++) {
                cin >> arr2[i];
            }
            int* concatenated = concat(arr1, size1, arr2, size2);
            cout << "Объединенный массив: ";
            for (int i = 0; i < size1 + size2; i++) {
                cout << concatenated[i] << " ";
            }
            cout << endl;
            break;
        }
        case 19: {
            cout << "Введите размер массива для задачи 4.10: ";
            cin >> size;
            if (size <= 0) {
                cout << "Размер массива должен быть положительным. Выход из задачи." << endl;
                return;
            }
            arr = new int[size];
            cout << "Введите элементы массива: ";
            for (int i = 0; i < size; i++) {
                cin >> arr[i];
            }
            int newSize;
            int* positiveArr = deleteNegative(arr, size, newSize);
            cout << "Массив без отрицательных чисел: ";
            for (int i = 0; i < newSize; i++) {
                cout << positiveArr[i] << " ";
            }
            cout << endl;
            break;
        }
        default:
            cout << "Некорректный номер задания." << endl;
    }
}

int main() {
    int taskNumber;

    while (true) {
        cout << "Выберите задание (1-19) или 0 для выхода: ";
        cin >> taskNumber;

        if (taskNumber == 0) {
            break;
        }

        executeTask(taskNumber);
    }

    return 0;
}

